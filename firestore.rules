rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to validate registration data
    function isValidRegistration() {
      return request.resource.data.keys().hasAll([
        'name', 'email', 'phone', 'college', 'year', 'branch', 
        'interests', 'selectedDay', 'dayTitle', 'dayDate', 
        'userId', 'userEmail', 'registrationDate', 'timestamp'
      ]);
    }
    
    // Rules for Day 1 registrations
    match /day1/{document} {
      // Allow authenticated users to create their own registration
      allow create: if request.auth != null 
                    && request.auth.uid == request.resource.data.userId
                    && request.auth.token.email == request.resource.data.userEmail
                    && isValidRegistration();
      
      // Allow users to read their own registration
      allow read: if request.auth != null 
                  && request.auth.uid == resource.data.userId;
      
      // Allow users to update their own registration (if needed)
      allow update: if request.auth != null 
                    && request.auth.uid == resource.data.userId
                    && request.auth.uid == request.resource.data.userId
                    && isValidRegistration();
      
      // Only admins can delete (you can modify this based on your admin setup)
      allow delete: if request.auth != null 
                    && request.auth.token.admin == true;
    }
    
    // Rules for Day 2 registrations
    match /day2/{document} {
      // Allow authenticated users to create their own registration
      allow create: if request.auth != null 
                    && request.auth.uid == request.resource.data.userId
                    && request.auth.token.email == request.resource.data.userEmail
                    && isValidRegistration();
      
      // Allow users to read their own registration
      allow read: if request.auth != null 
                  && request.auth.uid == resource.data.userId;
      
      // Allow users to update their own registration (if needed)
      allow update: if request.auth != null 
                    && request.auth.uid == resource.data.userId
                    && request.auth.uid == request.resource.data.userId
                    && isValidRegistration();
      
      // Only admins can delete (you can modify this based on your admin setup)
      allow delete: if request.auth != null 
                    && request.auth.token.admin == true;
    }
    
    // Admin rules for reading all registrations (optional)
    match /admin/{document} {
      allow read, write: if request.auth != null 
                         && request.auth.token.admin == true;
    }
  }
}
